geom_point() +
geom_line(aes(y = pred), color = "blue", lwd=1.5) +
labs(x = "Day (since start of the year)",
y = "Carbon dioxide (ppm) in atmosphere") +
theme_bw() +
theme(text = element_text(size = 20))
cub_lm <- lm(CO2 ~ Day + I(Day^2) + I(Day^3), data = CO2Germany)
CO2Germany %>%
mutate(pred = predict(cub_lm),
type = "Cubic model") %>%
rbind(CO2Germany %>%
mutate(pred = predict(quad_lm),
type = "Quadratic model")) %>%
ggplot(aes(x = Day, y = CO2)) +
geom_point() +
geom_line(aes(y = pred, color = type), lwd=1.5) +
labs(x = "Day (since start of the year)",
y = "Carbon dioxide (ppm) in atmosphere") +
theme_bw() +
theme(text = element_text(size = 20))
cub_lm
summary(cub_lm)
colnames(wildfires)
colnames(fire_clusters)
setwd("~/Documents/Teaching/sta112-f21.github.io/slides")
fire_clusters <- read_csv("fire-clusters.csv") %>%
mutate(proportion = BB/bld_clust)
fire_clusters %>%
ggplot(aes(x = proportion)) +
geom_histogram() +
labs(x == "Proportion of buildings burned") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
ggplot(aes(x = proportion)) +
geom_histogram() +
labs(x = "Proportion of buildings burned") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters <- fire_clusters %>%
filter(proportion > 0)
fire_clusters %>%
ggplot(aes(x = proportion)) +
geom_histogram() +
labs(x = "Proportion of buildings burned, \n for clusters with at least one building burned") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
ggplot(aes(x = bld_den, y = proportion)) +
geom_point() +
geom_smooth(method="lm", se=F)
fire_clusters %>%
ggplot(aes(x = sqrt(bld_den), y = sqrt(proportion))) +
geom_point() +
geom_smooth(method="lm", se=F)
fire_clusters %>%
ggplot(aes(x = log(bld_den), y = log(proportion))) +
geom_point() +
geom_smooth(method="lm", se=F)
lm_dens <- lm(proportion ~ bld_den, data = fire_clusters)
summary(lm_dens)
summary(lm(log(proportion) ~ log(bld_den), data = fire_clusters))
fire_clusters %>%
mutate(pred = predict(lm_dens),
res = resid(lm_dens)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
labs(x = "Predicted proportion of buildings burned",
y = "Residuals") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
mutate(res = resid(lm_dens)) %>%
ggplot(aes(sample = res)) +
geom_qq() +
geom_qq_line() +
labs(x = "Theoretical normal quantiles",
y = "Observed residual quantiles") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
ggplot(aes(x = bld_den, y = proportion)) +
geom_point() +
geom_smooth(method="lm", se=F) +
labs(x = "Building density in cluster",
y = "Proportion of buildings burned") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
ggplot(aes(x = log(bld_den), y = log(proportion))) +
geom_point() +
geom_smooth(method="lm", se=F) +
labs(x = "log(Building density in cluster)",
y = "log(Proportion of buildings burned)") +
theme_bw() +
theme(text = element_text(size = 20))
lm_dens <- lm(log(proportion) ~ log(bld_den), data = fire_clusters)
lm_dens
penguins %>%
ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
geom_smooth(method="lm", se="F")
penguins %>%
drop_na() %>%
ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
geom_smooth(method="lm", se="F")
penguins %>%
drop_na() %>%
ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
geom_smooth(method="lm", se=F)
penguins %>%
drop_na() %>%
ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
geom_smooth(method="lm", se=F) +
labs(x = "Bill depth (mm)",
y = "Bill length (mm)") +
theme_bw() +
theme(text = element_text(size = 20))
penguins %>%
drop_na() %>%
ggplot(aes(x = bill_depth_mm, y = bill_length_mm,
color = species)) +
geom_point() +
geom_smooth(method="lm", se=F) +
labs(x = "Bill depth (mm)",
y = "Bill length (mm)",
color = "Species") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters <- fire_clusters %>%
mutate(log_proportion = log(proportion),
log_bld_den = log(bld_den))
lm_dens <- lm(log_proportion ~ log_bld_den, data = fire_clusters)
lm_dens
summary(lm_dens)
lm_dens_disp <- lm(log_proportion ~ log_bld_den + bld_disp, data = fire_clusters)
summary(lm_dens_disp)
summary(lm_dens_disp)
summary(lm_dens)
cor(fire_clusters$log_bld_den, fire_clusters$bld_disp)
plot(fire_clusters$bld_disp, fire_clusters$log_bld_den)
?cut
cut(1:10, breaks=c(3, 6, 8))
lm_dens
lm_dens %>% kable()
lm_dens %>% summary() %>% kable()
12/15
13/15
22/25
21/25
22/25
13/15
176/200
22/25
pt(2, 100, lpwer.tail=F)
pt(2, 100, lower.tail=F)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
athletic_funding <- read_csv("https://sta112-f21.github.io/projects/athletic_funding_data.csv")
model2 = lm(log(inflation_adjusted_athletic_revenues) ~ sqrt(full_time_enrollment), data = only2014)
lm_dens_disp
summary(lm_dens_disp)
lm_dens_disp_int <- lm(log_proportion ~ log_bld_den*bld_disp, data = fire_clusters)
summary(lm_dens_disp_int)
hist(fire_clusters$near_bld)
dim(fire_clusters)
lm2 <- lm(log_proportion ~ log_bld_den + near_bld,
data = fire_clusters)
summary(lm2)
lm2 <- lm(log_proportion ~ log_bld_den*near_bld,
data = fire_clusters)
summary(lm2)
plot(lm2)
colnames(fire_clusters)
plot(fire_clusters$rdens, fire_clusters$log_bld_den)
plot(log(fire_clusters$rdens), fire_clusters$log_bld_den)
plot(fire_clusters$sloped, fire_clusters$log_bld_den)
plot(fire_clusters$elev, fire_clusters$log_bld_den)
plot(fire_clusters$near_bld, fire_clusters$log_bld_den)
plot(fire_clusters$near_bld, fire_clusters$bld_disp)
plot(fire_clusters$near_bld, fire_clusters$bld_den)
plot(log(fire_clusters$near_bld), fire_clusters$bld_den)
plotfire_clusters$near_bld^2, fire_clusters$bld_den)
plot(fire_clusters$near_bld^2, fire_clusters$bld_den)
plot(fire_clusters$near_bld, fire_clusters$log_proportion)
lm3 <- lm(log_proportion ~ log_bld_den*bld_disp + near_bld,
data = fire_clusters)
summary(lm3)
lm3 <- lm(log_proportion ~ log_bld_den*bld_disp + rdens,
data = fire_clusters)
summary(lm3)
lm2 <- lm(log_proportion ~ log_bld_den + near_bld,
data = fire_clusters)
lm2
lm2 <- lm(log_proportion ~ near_bld,
data = fire_clusters)
lm2
hist(fire_clusters$near_clust)
hist(log(fire_clusters$near_clust))
lm2 <- lm(log_proportion ~ log_bld_den + log(near_clust),
data = fire_clusters)
lm2
summary(lm2)
plot(fire_clusters$log_bld_den, log(fire_clusters$near_clust))
lm3 <- lm(log_proportion ~ log_bld_den*log(near_clust),
data = fire_clusters)
summary(lm3)
hist(fire_clusters$PLAND1)
hist(fire_clusters$PLAND3)
hist(fire_clusters$PLAND1)
max(fire_clusters$PLAND1 + fire_clusters$PLAND3)
plot(fire_clusters$log_bld_den, fire_clusters$PLAND1)
lm2 <- lm(log_proportion ~ log_bld_den + PLAND1,
data = fire_clusters)
summary(lm2)
lm2 <- lm(log_proportion ~ log_bld_den + PLAND1/1000,
data = fire_clusters)
lm2 <- lm(log_proportion ~ log_bld_den + I(PLAND1/1000),
data = fire_clusters)
summary(lm2)
lm3 <- lm(log_proportion ~ log_bld_den*PLAND1,
data = fire_clusters)
summary(lm3)
colnames(log_bld_den)
lm3 <- lm(log_proportion ~ log_bld_den*log(near_clust),
data = fire_clusters)
summary(lm3)
colnames(fire_clusters)
hist(fire_clusters$near_bld)
lm3 <- lm(log_proportion ~ near_bld*log(near_clust),
data = fire_clusters)
summary(lm3)
lm3 <- lm(log_proportion ~ bld_disp*log(near_clust),
data = fire_clusters)
summary(lm3)
colnames(fire_clusters)
hist(fire_clusters$CONTAG)
lm2 <- lm(log_proportion ~ log_bld_den*CONTAG,
data = fire_clusters)
summary(lm2)
lm2 <- lm(log_proportion ~ log_bld_den*near_bld,
data = fire_clusters)
summary(lm2)
lm3 <- lm(log_proportion ~ near_bld*log(near_clust),
data = fire_clusters)
summary(lm3)
lm3 <- lm(log_proportion ~ log_bld_den*log(near_clust),
data = fire_clusters)
summary(lm3)
colnames(fire_clusters)
hist(fire_clusters$CONNECT)
hist(log(fire_clusters$CONNECT))
lm2 <- lm(log_proportion ~ log_bld_den*log(CONNECT),
data = fire_clusters)
summary(lm2)
min(fire_clusters$CONNECT)
lm2 <- lm(log_proportion ~ log_bld_den*sqrt(CONNECT),
data = fire_clusters)
summary(lm2)
lm2 <- lm(log_proportion ~ log_bld_den*CONNECT,
data = fire_clusters)
summary(lm2)
hist(sqrt(fire_clusters$CONNECT))
plot(sqrt(fire_clusters$CONNECT))
plot(sqrt(fire_clusters$CONNECT), fire_clusters$log_bld_den)
lm1 <- lm(log_proportion ~ log_bld_den,
data = fire_clusters)
summary(lm1)
lm2 <- lm(log_proportion ~ log_bld_den + sqrt(CONNECT),
data = fire_clusters)
summary(lm2)
lm3 <- lm(log_proportion ~ log_bld_den*sqrt(CONNECT),
data = fire_clusters)
summary(lm3)
lm2 <- lm(log_proportion ~ log_bld_den + sqrt(CONNECT1),
data = fire_clusters)
summary(lm2)
lm3 <- lm(log_proportion ~ log_bld_den*sqrt(CONNECT1),
data = fire_clusters)
summary(lm3)
unique(fire_clusters$nlcd2006)
hist(fire_clusters$PLAND1)
hist(fire_clusters$PLAND3)
hist(sqrt(fire_clusters$PLAND3))
lm2 <- lm(log_proportion ~ log_bld_den + sqrt(PLAND3),
data = fire_clusters)
summary(lm2)
lm3 <- lm(log_proportion ~ log_bld_den*sqrt(PLAND3),
data = fire_clusters)
summary(lm3)
hist(fire_clusters$near_clust)
hist(sqrt(fire_clusters$near_clust))
hist(log(fire_clusters$near_clust))
lm3 <- lm(log_proportion ~ log_bld_den*sqrt(CONNECT1),
data = fire_clusters)
summary(lm3)
plot(fire_clusters$log_bld_den, fire_clusters$CONNECT1)
plot(fire_clusters$log_bld_den, fire_clusters$CONNECT3)
plot(fire_clusters$log_bld_den, sqrt(fire_clusters$CONNECT3))
lm3 <- lm(log_proportion ~ log_bld_den*sqrt(CONNECT3),
data = fire_clusters)
summary(lm3)
lm3 <- lm(log_proportion ~ log_bld_den*log(near_clust),
data = fire_clusters)
summary(lm3)
lm2 <- lm(log_proportion ~ log_bld_den + sqrt(CONNECT1),
data = fire_clusters)
summary(lm2)
lm2 <- lm(log_proportion ~ log_bld_den + sqrt(CONNECT1) + sqrt(rdens),
data = fire_clusters)
summary(lm2)
fire_clusters %>%
ggplot(aes(x = near_clust)) +
geom_histogram() +
theme_bw() +
labs(x = "Distance to nearest cluster (meters)") +
theme(text = element_text(size=20))
fire_clusters %>%
ggplot(aes(x = log(near_clust))) +
geom_histogram() +
theme_bw() +
labs(x = "log(Distance to nearest cluster)") +
theme(text = element_text(size=20))
fire_clusters <- fire_clusters %>%
mutate(log_proportion = log(proportion),
log_bld_den = log(bld_den),
log_clust_dist = log(near_clust))
lm_dens_dist <- lm(log_proportion ~ log_bld_den + log_clust_dist, data = fire_clusters)
summary(lm_dens_dist)
lm_dens_dist
fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = resid(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Residuals") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
mutate(res = resid(lm_dens_dist)) %>%
ggplot(aes(sample = res)) +
geom_qq() +
geom_qq_line() +
labs(x = "Theoretical normal quantiles",
y = "Observed residual quantiles") +
theme_bw() +
theme(text = element_text(size = 20))
summary(lm_dens_dist)
length_lm <- lm(bill_length_mm ~ species + body_mass_g, data = penguins_no_nas)
length_lm <- lm(bill_length_mm ~ species*body_mass_g, data = penguins_no_nas)
length_lm
0.0032 + 0.0013
27.11 + 0.0032*5000
27.11 + 0.58 + 0.0032*5000
27.11 - 0.58 + 0.0032*5000
27.11 - 0.58 + (0.0032 + 0.001)*5000
penguins %>%
drop_na() %>%
ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +
geom_point() +
geom_smooth(method = "lm", se=F) +
theme_bw() +
labs(x = "Body mass (g)", y = "Bill length (mm)",
color = "Species") +
theme_bw() +
theme(text = element_text(size = 20))
summary(length_lm)
27.11 - 0.58 + (0.0032 + 0.0010)*5000
lm_dens_dist_int
lm_dens_dist <- lm(log_proportion ~ log_bld_den*log_clust_dist, data = fire_clusters)
lm_dens_dist
fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = resid(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Residuals") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = rstudent(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Residuals") +
theme_bw() +
theme(text = element_text(size = 20))
library(patchwork)
fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = rstudent(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
geom_abline(slope = c(-3, -2, 2, 3), lty = 2, color="orange") +
labs(x = "Predicted log proportion",
y = "Studentized residuals") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = rstudent(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
geom_abline(intercept = c(-3, -2, 2, 3),
lty = 2, color="orange", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Studentized residuals") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = rstudent(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
geom_abline(intercept = c(-3, -2, 2, 3), slope=0,
lty = 2, color="orange", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Studentized residuals") +
theme_bw() +
theme(text = element_text(size = 20))
fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = rstudent(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
geom_abline(intercept = c(-3, -2, 2, 3), slope=0,
lty = 2, color="orange", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Studentized residuals") +
theme_bw() +
theme(text = element_text(size = 20)) +
scale_y_continuous(limits=c(-4, 3.2))
p1 <- fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = resid(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Residuals") +
theme_bw() +
theme(text = element_text(size = 20))
p2 <- fire_clusters %>%
mutate(res = resid(lm_dens_dist)) %>%
ggplot(aes(sample = res)) +
geom_qq() +
geom_qq_line() +
labs(x = "Theoretical normal quantiles",
y = "Observed residual quantiles") +
theme_bw() +
theme(text = element_text(size = 20))
p3 <- fire_clusters %>%
mutate(pred = predict(lm_dens_dist),
res = rstudent(lm_dens_dist)) %>%
ggplot(aes(x = pred,
y = res)) +
geom_point() +
geom_abline(slope = 0, intercept = 0,
color = "blue", lwd=1.2) +
geom_abline(intercept = c(-3, -2, 2, 3), slope=0,
lty = 2, color="orange", lwd=1.2) +
labs(x = "Predicted log proportion",
y = "Studentized residuals") +
theme_bw() +
theme(text = element_text(size = 20)) +
scale_y_continuous(limits=c(-4, 3.2))
(p1 + p2)/(p3 + plot_spacer())
lm_dens <- lm(log_proportion ~ log_bld_den, data = fire_clusters)
min(rstudent(lm_dens))
which.min(rstudent(lm_dens))
lm(log_proportion ~ log_bld_den, data = fire_clusters[-307,])
lm_dens_dist <- lm(log_proportion ~ log_bld_den + log_clust_dist, data = fire_clusters)
which.min(rstudent(lm_dens_dist))
lm(log_proportion ~ log_bld_den + log_clust_dist, data = fire_clusters[-307,])
lm_dens_dist
hist(fire_clusters$log_bld_den)
hist(fire_clusters$log_proportion)
4*0.02
hist(fire_clusters$log_clust_dist)
0.02*10
